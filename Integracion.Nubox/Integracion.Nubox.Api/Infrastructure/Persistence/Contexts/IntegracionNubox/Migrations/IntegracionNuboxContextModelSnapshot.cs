// <auto-generated />
using System;
using Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Migrations
{
    [DbContext(typeof(IntegracionNuboxContext))]
    partial class IntegracionNuboxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.BitacoraSincronizacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSincronizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId");

                    b.ToTable("BitacorasSincronizacion");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Compania", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companias");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.ConfiguracionPartner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailNotificaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("IntervaloSincronizacion")
                        .HasColumnType("time");

                    b.Property<int>("MaxReintentos")
                        .HasColumnType("int");

                    b.Property<string>("NombrePartner")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("NotificarErrores")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ProximaSincronizacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SincronizacionAutomatica")
                        .HasColumnType("bit");

                    b.Property<int>("TamañoLoteMaximo")
                        .HasColumnType("int");

                    b.Property<int>("TimeoutSegundos")
                        .HasColumnType("int");

                    b.Property<int>("TipoIntegracionPreferido")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaSincronizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaId")
                        .IsUnique()
                        .HasDatabaseName("IX_ConfiguracionesPartner_CompaniaId");

                    b.ToTable("ConfiguracionesPartner", (string)null);
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.LicenciaMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Diagnostico")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("EsAprobada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExternoPartner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroLicencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoLicencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("TrabajadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NumeroLicencia")
                        .IsUnique()
                        .HasDatabaseName("IX_LicenciasMedicas_NumeroLicencia");

                    b.HasIndex("TrabajadorId", "FechaInicio", "FechaFin")
                        .HasDatabaseName("IX_LicenciasMedicas_TrabajadorPeriodo");

                    b.ToTable("LicenciasMedicas", (string)null);
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.RegistroAsistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("HoraEntrada")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraSalida")
                        .HasColumnType("time");

                    b.Property<decimal>("HorasExtras")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("HorasRegulares")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("IdExternoPartner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<Guid>("TrabajadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdExternoPartner")
                        .HasDatabaseName("IX_RegistrosAsistencia_IdExternoPartner");

                    b.HasIndex("Fecha", "Estado")
                        .HasDatabaseName("IX_RegistrosAsistencia_FechaEstado");

                    b.HasIndex("TrabajadorId", "Fecha")
                        .HasDatabaseName("IX_RegistrosAsistencia_TrabajadorFecha");

                    b.ToTable("RegistrosAsistencia", (string)null);
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.ResumenAsistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<int>("DiasAsistencia")
                        .HasColumnType("int");

                    b.Property<int>("DiasInasistencia")
                        .HasColumnType("int");

                    b.Property<int>("DiasLicencia")
                        .HasColumnType("int");

                    b.Property<int>("DiasTardanza")
                        .HasColumnType("int");

                    b.Property<int>("DiasVacaciones")
                        .HasColumnType("int");

                    b.Property<bool>("EsProcesado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaProcesamiento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LiquidacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int?>("Quincena")
                        .HasColumnType("int");

                    b.Property<int?>("Semana")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalHorasExtras")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("TotalHorasRegulares")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid>("TrabajadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EsProcesado", "Año", "Mes")
                        .HasDatabaseName("IX_ResumenesAsistencia_ProcesadoPeriodo");

                    b.HasIndex("TrabajadorId", "Año", "Mes", "Semana", "Quincena")
                        .IsUnique()
                        .HasDatabaseName("IX_ResumenesAsistencia_TrabajadorPeriodo")
                        .HasFilter("[Semana] IS NOT NULL AND [Quincena] IS NOT NULL");

                    b.ToTable("ResumenesAsistencia", (string)null);
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Trabajador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExternoPartner")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UltimaSincronizacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdExternoPartner")
                        .HasDatabaseName("IX_Trabajadores_IdExternoPartner");

                    b.HasIndex("CompaniaId", "Dni")
                        .IsUnique()
                        .HasDatabaseName("IX_Trabajadores_CompaniaDni");

                    b.ToTable("Trabajadores", (string)null);
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.TransaccionSincronizacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompaniaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DetalleRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetalleResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DuracionMs")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPeriodo")
                        .HasColumnType("datetime2");

                    b.Property<string>("MensajeError")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ProcesadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RegistrosErrores")
                        .HasColumnType("int");

                    b.Property<int>("RegistrosProcesados")
                        .HasColumnType("int");

                    b.Property<int>("RegistrosTotales")
                        .HasColumnType("int");

                    b.Property<int>("SistemaOrigen")
                        .HasColumnType("int");

                    b.Property<decimal>("TamañoArchivoMB")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TipoIntegracion")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId")
                        .IsUnique()
                        .HasDatabaseName("IX_TransaccionesSincronizacion_TransactionId");

                    b.HasIndex("CompaniaId", "FechaInicio")
                        .HasDatabaseName("IX_TransaccionesSincronizacion_CompaniaFecha");

                    b.HasIndex("Estado", "FechaInicio")
                        .HasDatabaseName("IX_TransaccionesSincronizacion_EstadoFecha");

                    b.ToTable("TransaccionesSincronizacion", (string)null);
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.BitacoraSincronizacion", b =>
                {
                    b.HasOne("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.ConfiguracionPartner", b =>
                {
                    b.HasOne("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.LicenciaMedica", b =>
                {
                    b.HasOne("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Trabajador", "Trabajador")
                        .WithMany("LicenciasMedicas")
                        .HasForeignKey("TrabajadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.RegistroAsistencia", b =>
                {
                    b.HasOne("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Trabajador", "Trabajador")
                        .WithMany("RegistrosAsistencia")
                        .HasForeignKey("TrabajadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.ResumenAsistencia", b =>
                {
                    b.HasOne("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Trabajador", b =>
                {
                    b.HasOne("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.TransaccionSincronizacion", b =>
                {
                    b.HasOne("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Compania", "Compania")
                        .WithMany()
                        .HasForeignKey("CompaniaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compania");
                });

            modelBuilder.Entity("Integracion.Nubox.Api.Infrastructure.Persistence.Contexts.IntegracionNubox.Models.Trabajador", b =>
                {
                    b.Navigation("LicenciasMedicas");

                    b.Navigation("RegistrosAsistencia");
                });
#pragma warning restore 612, 618
        }
    }
}
